<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Giam sat nha Dalat</title>
        <script src="https://unpkg.com/mqtt@4.2.8/dist/mqtt.min.js"></script>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

        <script >
            var mqtt_server_ip = "<%=MQTT_HOST %>";
            var mqtt_server_port = <%=MQTT_PORT %>;

            var mqtt_topics_list = [];
            options = {
                clientId: "esp32cam-user",
                username: '<%=MQTT_USERNAME %>',
                password: '<%=MQTT_PASSWORD %>',
                clean: true
            }

            //handle incoming message
            function mqtt_message_handler(topic, message, packet)
            {
                try {
                    var data = JSON.parse(message);
                   // var payload = btoa(String.fromCharCode.apply(null, new Uint8Array(data['frame'])));
                   var payload = data['frame'];
                    document.getElementById("data-payload").src = `data:image/jpeg;base64,${payload}`;
                    document.getElementById("data-timestamp").innerHTML = time_converter(data['timestamp']);
                } catch (err) {
                    console.log(err);
                }
            }

            //handle incoming connect
            function mqtt_connect_handler()
            {
                try {
                    console.log("user mqtt connected  " + mqtt_client.connected);
                    document.getElementById("broker-status").innerHTML = "da ket noi server";
                } catch (err) {

                }
            }

            //handle error
            function mqtt_error_handler(error)
            {
                console.log("Can't connect to broker" + error);
            }

            function toggle_camera() {
                mqtt_publish("dalat_survail/esp32cam/down", "TOGGLE_CAMERA");
            }

            function toggle_flash() {
                mqtt_publish("dalat_survail/esp32cam/down", "TOGGLE_FLASH");
            }

            function reset_mcu() {
                mqtt_publish("dalat_survail/esp32cam/down", "RESET");
            }

            function mqtt_publish(topic, msg) {
                mqtt_client.publish(topic, msg, {
                    qos: 0,
                    dup: false,
                    retain: false
                }, (err) => {
                    console.log(err);
                });
            }

            function time_converter(UNIX_timestamp){
                let t = new Date(UNIX_timestamp);
                return `${t.getDate()}/${t.getMonth()+1}/${t.getFullYear()} ${t.getHours()}(h):${t.getMinutes()}(min):${t.getSeconds()}(s)`;
            }

        </script>
    </head>

    <body>
        <div class="h2" id="broker-status">dang ket noi...</div>

        <div>
            <button type="button" class="btn btn-primary" onclick="toggle_camera()">Play/Pause</button>
            <button type="button" class="btn btn-secondary" onclick="toggle_flash()">LED On/Off</button>
            <button type="button" class="btn btn-danger" onclick="reset_mcu()">Reset</button>
        </div>

        <div>
            <img id="data-payload" src="">
            <div id="data-timestamp" ></div>
        </div>

        <script>
            mqtt_client = mqtt.connect(`ws://${mqtt_server_ip}:${ mqtt_server_port}/mqtt`, options);
            mqtt_topics_list.push("dalat_survail/esp32cam/up/preprocessed");
            mqtt_client.subscribe(mqtt_topics_list);
            mqtt_client.on('connect', mqtt_connect_handler);
            mqtt_client.on('message', mqtt_message_handler);
        </script>
    </body>
</html>